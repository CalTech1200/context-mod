{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "anyOf": [
        {
            "$ref": "#/definitions/RecentActivityRuleJSONConfig"
        },
        {
            "$ref": "#/definitions/RepeatActivityJSONConfig"
        },
        {
            "$ref": "#/definitions/AuthorRuleJSONConfig"
        },
        {
            "$ref": "#/definitions/AttributionJSONConfig"
        },
        {
            "type": "string"
        }
    ],
    "definitions": {
        "ActivityWindowCriteria": {
            "additionalProperties": false,
            "description": "If both properties are defined then the first criteria met will be used IE if # of activities = count before duration is reached then count will be used, or vice versa",
            "minProperties": 1,
            "properties": {
                "count": {
                    "description": "The number of activities (submission/comments) to consider",
                    "type": "number"
                },
                "duration": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/DurationObject"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "An ISO 8601 duration or Day.js duration object.\n\nThe duration will be subtracted from the time when the rule is run to create a time range like this:\n\nendTime = NOW  <----> startTime = (NOW - duration)\n\nEX endTime = 3:00PM <----> startTime = (NOW - 15 minutes) = 2:45PM -- so look for activities between 2:45PM and 3:00PM",
                    "examples": [
                        "PT1M",
                        {
                            "minutes": 15
                        }
                    ]
                }
            },
            "propertyOrder": [
                "count",
                "duration"
            ],
            "type": "object"
        },
        "AttributionCriteria": {
            "properties": {
                "minActivityCount": {
                    "default": 5,
                    "description": "The minimum number of activities (activities defined in `includeInTotal`) that must exist for this criteria to run",
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "threshold": {
                    "default": "10%",
                    "description": "The number or percentage to trigger this rule at\n\n* If `threshold` is a `number` then it is the absolute number of attribution instances to trigger at\n* If `threshold` is a `string` with percentage (EX `40%`) then it is the percentage of the total (see `lookAt`) this attribution must reach to trigger",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "thresholdOn": {
                    "default": "all",
                    "description": "What activities to use for total count when determining what percentage an attribution comprises\n\nEX:\n\nAuthor has 100 activities, 40 are submissions and 60 are comments\n\n* If `submission` then if 10 submission are for Youtube Channel A then percentage => 10/40 = 25%\n* If `all` then if 10 submission are for Youtube Channel A then percentage => 10/100 = 10%",
                    "enum": [
                        "all",
                        "submissions"
                    ],
                    "type": "string"
                },
                "window": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/DurationObject"
                        },
                        {
                            "$ref": "#/definitions/ActivityWindowCriteria"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                }
            },
            "propertyOrder": [
                "threshold",
                "window",
                "thresholdOn",
                "minActivityCount",
                "name"
            ],
            "required": [
                "threshold",
                "window"
            ],
            "type": "object"
        },
        "AttributionJSONConfig": {
            "description": "Aggregates all of the domain/media accounts attributed to an author's Submission history. If any domain is over the threshold the rule is triggered\n\nAvailable data for [Action templating](https://github.com/FoxxMD/reddit-context-bot#action-templating):\n\n```\ncount      => Total number of repeat Submissions\nthreshold  => The threshold you configured for this Rule to trigger\nurl        => Url of the submission that triggered the rule\n```",
            "properties": {
                "aggregateMediaDomains": {
                    "default": false,
                    "description": "Should the rule aggregate recognized media domains into the parent domain?\n\nSubmissions to major media domains (youtube, vimeo) can be identified by individual Channel/Author...\n\n* If `false` then aggregate will occur at the channel level IE Youtube Channel A (2 counts), Youtube Channel B  (3 counts)\n* If `true` then then aggregation will occur at the domain level IE youtube.com (5 counts)",
                    "type": "boolean"
                },
                "authors": {
                    "$ref": "#/definitions/AuthorOptions",
                    "additionalProperties": false,
                    "description": "If present then these Author criteria are checked before running the rule. If criteria fails then the rule is skipped.",
                    "minProperties": 1
                },
                "criteria": {
                    "description": "A list threshold-window values to test attribution against\n\nIf none is provided the default set used is:\n\n```\nthreshold: 10%\nwindow: 100\n```",
                    "items": {
                        "$ref": "#/definitions/AttributionCriteria"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "criteriaJoin": {
                    "description": "* If `OR` then any set of AttributionCriteria that produce an Attribution over the threshold will trigger the rule.\n* If `AND` then all AttributionCriteria sets must product an Attribution over the threshold to trigger the rule.",
                    "enum": [
                        "AND",
                        "OR"
                    ],
                    "type": "string"
                },
                "exclude": {
                    "description": "Do not include Submissions from this list of Subreddits.\n\nA list of subreddits (case-insensitive) to look for. Do not include \"r/\" prefix.\n\nEX to match against /r/mealtimevideos and /r/askscience use [\"mealtimevideos\",\"askscience\"]",
                    "examples": [
                        "mealtimevideos",
                        "askscience"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "include": {
                    "description": "Only include Submissions from this list of Subreddits.\n\nA list of subreddits (case-insensitive) to look for. Do not include \"r/\" prefix.\n\nEX to match against /r/mealtimevideos and /r/askscience use [\"mealtimevideos\",\"askscience\"]",
                    "examples": [
                        "mealtimevideos",
                        "askscience"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "includeSelf": {
                    "default": false,
                    "description": "Include reddit `self.*` domains in aggregation?\n\nSelf-posts are aggregated under the domain `self.[subreddit]`. If you wish to include these domains in aggregation set this to `true`",
                    "type": "boolean"
                },
                "kind": {
                    "description": "The kind of rule to run",
                    "enum": [
                        "attribution"
                    ],
                    "type": "string"
                },
                "lookAt": {
                    "default": "all",
                    "description": "Determines which type of attribution to look at\n\n* If `media` then only the author's submission history which reddit recognizes as media (youtube, vimeo, etc.) will be considered\n* If `all` then all domains (EX youtube.com, twitter.com) from the author's submission history will be considered",
                    "enum": [
                        "all",
                        "media"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "An optional, but highly recommended, friendly name for this rule. If not present will default to `kind`.\n\nCan only contain letters, numbers, underscore, spaces, and dashes\n\nname is used to reference Rule result data during Action content templating. See CommentAction or ReportAction for more details.",
                    "pattern": "^[a-zA-Z]([\\w -]*[\\w])?$",
                    "type": "string"
                },
                "useSubmissionAsReference": {
                    "default": true,
                    "description": "If activity is a Submission and is a link (not self-post) then only look at Submissions that contain this link, otherwise consider all activities.",
                    "type": "boolean"
                }
            },
            "propertyOrder": [
                "kind",
                "criteria",
                "criteriaJoin",
                "include",
                "exclude",
                "lookAt",
                "aggregateMediaDomains",
                "includeSelf",
                "useSubmissionAsReference",
                "name",
                "authors"
            ],
            "required": [
                "kind"
            ],
            "type": "object"
        },
        "AuthorCriteria": {
            "additionalProperties": false,
            "description": "Criteria with which to test against the author of an Activity. The outcome of the test is based on:\n\n1. All present properties passing and\n2. If a property is a list then any value from the list matching",
            "minProperties": 1,
            "properties": {
                "flairCssClass": {
                    "description": "A list of (user) flair css class values from the subreddit to match against",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "flairText": {
                    "description": "A list of (user) flair text values from the subreddit to match against",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "isMod": {
                    "description": "Is the author a moderator?",
                    "type": "boolean"
                },
                "name": {
                    "description": "A list of reddit usernames (case-insensitive) to match against. Do not include the \"u/\" prefix\n\n EX to match against /u/FoxxMD and /u/AnotherUser use [\"FoxxMD\",\"AnotherUser\"]",
                    "examples": [
                        "FoxxMD",
                        "AnotherUser"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "propertyOrder": [
                "name",
                "flairCssClass",
                "flairText",
                "isMod"
            ],
            "type": "object"
        },
        "AuthorOptions": {
            "additionalProperties": false,
            "description": "If present then these Author criteria are checked before running the rule. If criteria fails then the rule is skipped.",
            "minProperties": 1,
            "properties": {
                "exclude": {
                    "description": "Only runs if include is not present. Will \"pass\" if any of set of the AuthorCriteria does not pass",
                    "items": {
                        "$ref": "#/definitions/AuthorCriteria"
                    },
                    "type": "array"
                },
                "include": {
                    "description": "Will \"pass\" if any set of AuthorCriteria passes",
                    "items": {
                        "$ref": "#/definitions/AuthorCriteria"
                    },
                    "type": "array"
                }
            },
            "propertyOrder": [
                "include",
                "exclude"
            ],
            "type": "object"
        },
        "AuthorRuleJSONConfig": {
            "properties": {
                "authors": {
                    "$ref": "#/definitions/AuthorOptions",
                    "additionalProperties": false,
                    "description": "If present then these Author criteria are checked before running the rule. If criteria fails then the rule is skipped.",
                    "minProperties": 1
                },
                "exclude": {
                    "description": "Only runs if include is not present. Will \"pass\" if any of set of the AuthorCriteria does not pass",
                    "items": {
                        "$ref": "#/definitions/AuthorCriteria"
                    },
                    "type": "array"
                },
                "include": {
                    "description": "Will \"pass\" if any set of AuthorCriteria passes",
                    "items": {
                        "$ref": "#/definitions/AuthorCriteria"
                    },
                    "type": "array"
                },
                "kind": {
                    "description": "The kind of rule to run",
                    "enum": [
                        "author"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "An optional, but highly recommended, friendly name for this rule. If not present will default to `kind`.\n\nCan only contain letters, numbers, underscore, spaces, and dashes\n\nname is used to reference Rule result data during Action content templating. See CommentAction or ReportAction for more details.",
                    "pattern": "^[a-zA-Z]([\\w -]*[\\w])?$",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "kind",
                "include",
                "exclude",
                "name",
                "authors"
            ],
            "required": [
                "exclude",
                "include",
                "kind"
            ],
            "type": "object"
        },
        "DurationObject": {
            "additionalProperties": false,
            "description": "A Day.js duration object\n\nhttps://day.js.org/docs/en/durations/creating",
            "minProperties": 1,
            "properties": {
                "days": {
                    "type": "number"
                },
                "hours": {
                    "type": "number"
                },
                "minutes": {
                    "type": "number"
                },
                "months": {
                    "type": "number"
                },
                "seconds": {
                    "type": "number"
                },
                "weeks": {
                    "type": "number"
                },
                "years": {
                    "type": "number"
                }
            },
            "propertyOrder": [
                "seconds",
                "minutes",
                "hours",
                "days",
                "weeks",
                "months",
                "years"
            ],
            "type": "object"
        },
        "RecentActivityRuleJSONConfig": {
            "description": "Checks a user's history for any Activity (Submission/Comment) in the subreddits specified in thresholds\n\nAvailable data for [Action templating](https://github.com/FoxxMD/reddit-context-bot#action-templating):\n\n```\nsummary    => comma-deliminated list of subreddits that hit the threshold and their count EX subredditA(1), subredditB(4),...\nsubCount   => Total number of subreddits that hit the threshold\ntotalCount => Total number of all activity occurrences in subreddits\n```",
            "properties": {
                "authors": {
                    "$ref": "#/definitions/AuthorOptions",
                    "additionalProperties": false,
                    "description": "If present then these Author criteria are checked before running the rule. If criteria fails then the rule is skipped.",
                    "minProperties": 1
                },
                "kind": {
                    "description": "The kind of rule to run",
                    "enum": [
                        "recentActivity"
                    ],
                    "type": "string"
                },
                "lookAt": {
                    "description": "If present restricts the activities that are considered for count from SubThreshold",
                    "enum": [
                        "comments",
                        "submissions"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "An optional, but highly recommended, friendly name for this rule. If not present will default to `kind`.\n\nCan only contain letters, numbers, underscore, spaces, and dashes\n\nname is used to reference Rule result data during Action content templating. See CommentAction or ReportAction for more details.",
                    "pattern": "^[a-zA-Z]([\\w -]*[\\w])?$",
                    "type": "string"
                },
                "thresholds": {
                    "description": "A list of subreddits/count criteria that may trigger this rule. ANY SubThreshold will trigger this rule.",
                    "items": {
                        "$ref": "#/definitions/SubThreshold"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "useSubmissionAsReference": {
                    "default": true,
                    "description": "If activity is a Submission and is a link (not self-post) then only look at Submissions that contain this link, otherwise consider all activities.",
                    "type": "boolean"
                },
                "window": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/DurationObject"
                        },
                        {
                            "$ref": "#/definitions/ActivityWindowCriteria"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "default": 15,
                    "description": "Criteria for defining what set of activities should be considered.\n\nThe value of this property may be either count OR duration -- to use both write it as an ActivityWindowCriteria\n\nSee ActivityWindowCriteria for descriptions of what count/duration do",
                    "examples": [
                        15,
                        "PT1M",
                        {
                            "count": 10
                        },
                        {
                            "duration": {
                                "hours": 5
                            }
                        },
                        {
                            "count": 5,
                            "duration": {
                                "minutes": 15
                            }
                        }
                    ]
                }
            },
            "propertyOrder": [
                "kind",
                "lookAt",
                "thresholds",
                "window",
                "useSubmissionAsReference",
                "name",
                "authors"
            ],
            "required": [
                "kind",
                "thresholds"
            ],
            "type": "object"
        },
        "RepeatActivityJSONConfig": {
            "description": "Checks a user's history for Submissions with identical content\n\nAvailable data for [Action templating](https://github.com/FoxxMD/reddit-context-bot#action-templating):\n\n```\ncount      => Total number of repeat Submissions\nthreshold  => The threshold you configured for this Rule to trigger\nurl        => Url of the submission that triggered the rule\n```",
            "properties": {
                "authors": {
                    "$ref": "#/definitions/AuthorOptions",
                    "additionalProperties": false,
                    "description": "If present then these Author criteria are checked before running the rule. If criteria fails then the rule is skipped.",
                    "minProperties": 1
                },
                "exclude": {
                    "description": "Do not include Submissions from this list of Subreddits.\n\nA list of subreddits (case-insensitive) to look for. Do not include \"r/\" prefix.\n\nEX to match against /r/mealtimevideos and /r/askscience use [\"mealtimevideos\",\"askscience\"]",
                    "examples": [
                        "mealtimevideos",
                        "askscience"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "gapAllowance": {
                    "description": "The number of allowed non-identical Submissions between identical Submissions that can be ignored when checking against the threshold value",
                    "type": "number"
                },
                "include": {
                    "description": "Only include Submissions from this list of Subreddits.\n\nA list of subreddits (case-insensitive) to look for. Do not include \"r/\" prefix.\n\nEX to match against /r/mealtimevideos and /r/askscience use [\"mealtimevideos\",\"askscience\"]",
                    "examples": [
                        "mealtimevideos",
                        "askscience"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "kind": {
                    "description": "The kind of rule to run",
                    "enum": [
                        "repeatActivity"
                    ],
                    "type": "string"
                },
                "lookAt": {
                    "default": "all",
                    "description": "If present determines which activities to consider for gapAllowance.\n\n* If `submissions` then only the author's submission history is considered IE gapAllowance = 2  ===> can have gap of two submissions between repeats\n* If `all` then the author's entire history (submissions/comments) is considered IE gapAllowance = 2  ===> can only have gap of two activities (submissions or comments) between repeats",
                    "enum": [
                        "all",
                        "submissions"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "An optional, but highly recommended, friendly name for this rule. If not present will default to `kind`.\n\nCan only contain letters, numbers, underscore, spaces, and dashes\n\nname is used to reference Rule result data during Action content templating. See CommentAction or ReportAction for more details.",
                    "pattern": "^[a-zA-Z]([\\w -]*[\\w])?$",
                    "type": "string"
                },
                "threshold": {
                    "default": 5,
                    "description": "The number of repeat submissions that will trigger the rule",
                    "type": "number"
                },
                "useSubmissionAsReference": {
                    "default": true,
                    "description": "If activity is a Submission and is a link (not self-post) then only look at Submissions that contain this link, otherwise consider all activities.",
                    "type": "boolean"
                },
                "window": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/DurationObject"
                        },
                        {
                            "$ref": "#/definitions/ActivityWindowCriteria"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "default": 15,
                    "description": "Criteria for defining what set of activities should be considered.\n\nThe value of this property may be either count OR duration -- to use both write it as an ActivityWindowCriteria\n\nSee ActivityWindowCriteria for descriptions of what count/duration do",
                    "examples": [
                        15,
                        "PT1M",
                        {
                            "count": 10
                        },
                        {
                            "duration": {
                                "hours": 5
                            }
                        },
                        {
                            "count": 5,
                            "duration": {
                                "minutes": 15
                            }
                        }
                    ]
                }
            },
            "propertyOrder": [
                "kind",
                "threshold",
                "gapAllowance",
                "include",
                "exclude",
                "lookAt",
                "window",
                "useSubmissionAsReference",
                "name",
                "authors"
            ],
            "required": [
                "kind"
            ],
            "type": "object"
        },
        "SubThreshold": {
            "properties": {
                "count": {
                    "default": 1,
                    "description": "The number of activities in each subreddit from the list that will trigger this rule",
                    "minimum": 1,
                    "type": "number"
                },
                "subreddits": {
                    "description": "A list of subreddits (case-insensitive) to look for. Do not include \"r/\" prefix.\n\nEX to match against /r/mealtimevideos and /r/askscience use [\"mealtimevideos\",\"askscience\"]",
                    "examples": [
                        "mealtimevideos",
                        "askscience"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                }
            },
            "propertyOrder": [
                "count",
                "subreddits"
            ],
            "required": [
                "subreddits"
            ],
            "type": "object"
        }
    }
}

