<html>
<%- include('partials/head', {title: undefined}) %>
<body class="">
<script>localStorage.getItem('ms-dark') === 'no' ? document.body.classList.remove('dark') : document.body.classList.add('dark')</script>
<div class="min-w-screen min-h-screen bg-gray-100 bg-gray-100 dark:bg-gray-800 font-sans">
    <%- include('partials/authTitle') %>
    <div class="space-x-4 py-1 md:px-10 leading-6 font-semibold bg-gray-500 dark:bg-gray-700 text-white">
        <div class="container mx-auto">
            <div class="flex items-center justify-between">
                <ul id="tabs" class="inline-flex px-1 pt-2 ">
                    <% subreddits.forEach(function (data){ %>
                        <li class="px-4 py-2 dark:text-white rounded-t">
                            <a class="tabSelect font-normal"
                               data-subreddit="<%= data.name %>"
                               href="#<%= data.name %>">
                                <%= data.name %>
                            </a>
                            <% if ((data.name === 'All' && isOperator) || data.name !== 'All') { %>
                                <span class="inline-block mb-0.5 ml-0.5 w-2 h-2 mr-2 bg-<%= data.indicator %>-400 rounded-full"></span>
                            <% } %>
                        </li>
                    <% }) %>
                </ul>
                <div class="flex items-center flex-end font-normal">
                    <div>
                        <div>Level : <%- logSettings.level %></div>
                        <div>Sort : <%- logSettings.sort %></div>
                        <div>Limit : <%- logSettings.limit %></div>
                        <div>Theme : <a id="light" href="" class="theme">Light</a> | <a id="dark" href="" class="theme">Dark</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container mx-auto">
        <div class="grid">
            <div class="bg-white dark:bg-gray-500 dark:text-white">
                <div class="pb-6 pt-3 md:px-10">
                    <div class="flex items-center justify-around">
                        <div>
                            <input id="checkUrl" style="min-width: 500px;"
                                   class="border-gray-50 placeholder-gray-500 rounded mt-2 mb-3 p-2 text-black"
                                   placeholder="Run Bot on an url (Submission/Comment)"/>
                            <span class="mx-2">
                            <input type="checkbox" id="dryrunCheck" name="dryrunCheck">
                            <label for="dryrunCheck">Test?</label>
                                </span>
                            <a id="runCheck" href="">Run</a>
                        </div>

                    </div>
                    <% subreddits.forEach(function (data){ %>
                        <div class="sub" data-subreddit="<%= data.name %>">
                            <div class="grid md:grid-cols-2 gap-10">
                                <div class="bg-white shadow-md rounded my-3 dark:bg-gray-500 dark:text-white">
                                    <div class="space-x-4 px-4 p-2 leading-2 font-semibold bg-gray-300 dark:bg-gray-700 dark:text-white">
                                        <div class="flex items-center justify-between">
                                            <h4>Overview</h4>
                                            <% if (data.name === 'All') { %>
                                                <div class="flex items-center flex-end">
                                                    <div>
                                                        <a class="action" id="start" data-type="bot" data-subreddit="<%= data.name %>"
                                                           href="#">Start All</a> |
                                                        <a class="action" id="stop" data-type="bot" data-subreddit="<%= data.name %>"
                                                           href="#">Stop All</a> |
                                                        <a class="action" id="reload" data-subreddit="<%= data.name %>"
                                                           href="#">Reload All</a>
                                                    </div>
                                                </div>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="p-4">
                                        <div class="stats">
                                            <% if (data.name !== 'All') { %>
                                                <label>Manager (Bot)</label>
                                                <div class="flex items-center justify-between">
                                                <span class="font-semibold"><%= `${data.botState.state}${data.botState.causedBy === 'system' ? '' : ' (user)'}` %></span>
                                                    <div class="flex items-center flex-end">
                                                        <div>
                                                            <a class="action" id="start" data-type="bot"
                                                               data-subreddit="<%= data.name %>" href="#">Start</a> |
                                                            <a class="action" id="stop" data-type="bot"
                                                               data-subreddit="<%= data.name %>" href="#">Stop</a>
                                                        </div>
                                                    </div>
                                                </div>
                                                <label>Queue</label>
                                                <div class="flex items-center justify-between">
                                                <span class="font-semibold"><%= `${data.queueState.state}${data.queueState.causedBy === 'system' ? '' : ' (user)'}` %></span>
                                                <div class="flex items-center flex-end">
                                                    <div>
                                                        <a class="action" id="start" data-type="queue"
                                                           data-subreddit="<%= data.name %>" href="#">Start</a> |
                                                        <a class="action" id="pause" data-type="queue"
                                                           data-subreddit="<%= data.name %>" href="#">Pause</a> |
                                                        <a class="action" id="stop" data-type="queue"
                                                           data-subreddit="<%= data.name %>" href="#">Stop</a>
                                                    </div>
                                                </div>
                                                </div>
                                                <label>Activity Polling</label>
                                                <div class="flex items-center justify-between">
                                                    <span class="font-semibold"><%= `${data.eventsState.state}${data.eventsState.causedBy === 'system' ? '' : ' (user)'}` %></span>
                                                    <div class="flex items-center flex-end">
                                                        <div>
                                                            <a class="action" id="start" data-type="event"
                                                               data-subreddit="<%= data.name %>" href="#">Start</a> |
                                                            <a class="action" id="pause" data-type="event"
                                                               data-subreddit="<%= data.name %>" href="#">Pause</a> |
                                                            <a class="action" id="stop" data-type="event"
                                                               data-subreddit="<%= data.name %>" href="#">Stop</a>
                                                        </div>
                                                    </div>
                                                </div>
                                                <label>Valid Config</label>
                                                <span class="font-semibold"><%= data.validConfig %></span>
                                                <label>Queued Activities</label>
                                                <span><%= data.queuedActivities %></span>
                                                <label>Running Activities (Max)</label>
                                                <span><%= `${data.runningActivities} (${data.maxWorkers})` %></span>
                                            <% } %>
                                            <label>Dry Run</label>
                                            <span><%= data.dryRun %></span>
                                            <label>Checks</label>
                                            <span><%= data.checks.submissions %> Submission | <%= data.checks.comments %> Comment </span>
                                            <% if (data.name !== 'All') { %>
                                                <label>Started At</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <%= data.startedAt %>
                                                    </span>
                                                    <%= data.startedAtHuman %>
                                                </span>
                                                <label>Config</label>
                                                <span>
                                                    <a style="display: inline"
                                                       href="<%= data.wikiHref %>"><%= data.wikiLocation %></a>
                                                    <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <%= data.wikiRevision %>
                                                    </span>
                                                    (Revised <%= data.wikiRevisionHuman %>)
                                                </span>
                                                </span>
                                                <label>Config Checked</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <%= data.wikiLastCheck %>
                                                    </span>
                                                    <%= data.wikiLastCheckHuman %> <a class="action" id="reload"
                                                                                      data-subreddit="<%= data.name %>"
                                                                                      href="#">Reload</a> | <a
                                                            class="action" id="reload" data-force="true"
                                                            data-subreddit="<%= data.name %>" href="#">Force</a>
                                                </span>
                                            <% } %>
                                            <% if (data.name === 'All' && isOperator) { %>
                                                <label>Started At</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <%= data.startedAt %>
                                                    </span>
                                                    <span id="startedAtHuman"><%= data.startedAtHuman %></span>
                                                </span>
                                                <label>Heartbeat Interval</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <%= data.heartbeat %> seconds
                                                    </span>
                                                    <%= data.heartbeatHuman %>
                                                </span>
                                                <label>Next Heartbeat</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <span id="nextHeartbeat"><%= data.nextHeartbeat %></span>
                                                    </span>
                                                    <span id="nextHeartbeatHuman"><%= data.nextHeartbeatHuman %></span>
                                                </span>
                                                <label>Api Limit</label>
                                                <span><span id="apiLimit"><%= data.apiLimit %></span>/600</span>
                                                <label>Api Limit Reset</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <span id="limitReset"><%= data.limitReset %></span>
                                                    </span>
                                                    <span id="limitResetHuman"><%= data.limitResetHuman %></span>
                                                </span>
                                            <% } %>
                                        </div>
                                        <% if (data.name !== 'All') { %>
                                            <ul class="list-disc list-inside mt-4">
                                                <% data.pollingInfo.forEach(function (i){ %>
                                                    <li>Polling <%- i %></li>
                                                <% }) %>
                                            </ul>
                                        <% } %>
                                    </div>
                                </div>
                                <div class="bg-white shadow-md rounded my-3 dark:bg-gray-500 dark:text-white">
                                    <div class="space-x-4 px-4 p-2 leading-2 font-semibold bg-gray-300 dark:bg-gray-700 dark:text-white">
                                        <h4>Stats</h4>
                                    </div>
                                    <div class="p-4">
                                        <div class="flex items-center justify-evenly">
                                            <% if (data.name !== 'All') { %>
                                                <div>
                                                    <h4 class="text-center text-semibold pb-2">Since Start</h4>
                                                    <div class="stats">
                                                        <label>Events Checked</label>
                                                        <span><%= data.stats.eventsCheckedSinceStartTotal === undefined ? '-' : data.stats.eventsCheckedSinceStartTotal %></span>

                                                        <label>Checks Run</label>
                                                        <span><%= data.stats.checksRunSinceStartTotal === undefined ? '-' : data.stats.checksRunSinceStartTotal %></span>

                                                        <label>Checks Triggered</label>
                                                        <span><%= data.stats.checksTriggeredSinceStartTotal === undefined ? '-' : data.stats.checksTriggeredSinceStartTotal %></span>

                                                        <label>Rules Run</label>
                                                        <span><%= data.stats.rulesRunSinceStartTotal === undefined ? '-' : data.stats.rulesRunSinceStartTotal %></span>

                                                        <label>Rules Cached</label>
                                                        <span><%= data.stats.rulesCachedSinceStartTotal === undefined ? '-' : data.stats.rulesCachedSinceStartTotal %></span>

                                                        <label>Rules Triggered</label>
                                                        <span><%= data.stats.rulesTriggeredSinceStartTotal === undefined ? '-' : data.stats.rulesTriggeredSinceStartTotal %></span>

                                                        <label>Actions Run</label>
                                                        <span><%= data.stats.actionsRunSinceStartTotal === undefined ? '-' : data.stats.actionsRunSinceStartTotal %></span>
                                                    </div>
                                                </div>
                                            <% } %>
                                            <div>
                                                <h4 class="text-center text-semibold pb-2">All Time</h4>
                                                <div class="stats">
                                                    <label>Events Checked</label>
                                                    <span><%= data.stats.eventsCheckedTotal %></span>

                                                    <label>Checks Run</label>
                                                    <span><%= data.stats.checksRunTotal %></span>

                                                    <label>Checks Triggered</label>
                                                    <span><%= data.stats.checksTriggeredTotal %></span>

                                                    <label>Rules Run</label>
                                                    <span><%= data.stats.rulesRunTotal %></span>

                                                    <label>Rules Cached</label>
                                                    <span><%= data.stats.rulesCachedTotal %></span>

                                                    <label>Rules Triggered</label>
                                                    <span><%= data.stats.rulesTriggeredTotal %></span>

                                                    <label>Actions Run</label>
                                                    <span><%= data.stats.actionsRunTotal %></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br/>
                            <svg class="loading" version="1.1" id="L9" xmlns="http://www.w3.org/2000/svg"
                                 xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 viewBox="0 0 100 100" xml:space="preserve">
                        <path
                                d="M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50">
                            <animateTransform
                                    attributeName="transform"
                                    attributeType="XML"
                                    type="rotate"
                                    dur="1s"
                                    from="0 50 50"
                                    to="360 50 50"
                                    repeatCount="indefinite"/>
                        </path>
                    </svg>
                            <div data-subreddit="<%= data.name %>" class="logs font-mono text-sm">
                                <% data.logs.forEach(function (logEntry){ %>
                                    <%- logEntry %>
                                <% }) %>
                            </div>
                        </div>
                    <% }) %>
                </div>
                <!--<div class="w-full flex-auto flex min-h-0 overflow-auto">
                    <div class="w-full relative flex-auto">
                    </div>
                </div>-->
            </div>
        </div>
    </div>
</div>
<script>
    /*    const appendUser = causedBy => causedBy === 'system' ? '' : ' (user)';
        const initialData =
        const updateOverview = (sub, data) => {

        }*/
    window.sort = 'desc';
    document.querySelectorAll('.theme').forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault();
            if (e.target.id === 'dark') {
                document.body.classList.add('dark');
                localStorage.setItem('ms-dark', 'yes');
            } else {
                document.body.classList.remove('dark');
                localStorage.setItem('ms-dark', 'no');
            }
            document.querySelectorAll('.theme').forEach(el => {
                el.classList.remove('font-bold', 'no-underline', 'pointer-events-none');
            });
            e.target.classList.add('font-bold', 'no-underline', 'pointer-events-none');
        })
    })

    if (localStorage.getItem('ms-dark') === 'no') {
        document.querySelector('#light.theme').classList.add('font-bold', 'no-underline', 'pointer-events-none');
        document.body.classList.remove('dark')
    } else {
        document.querySelector('#dark.theme').classList.add('font-bold', 'no-underline', 'pointer-events-none');
    }

    document.querySelector('.log-info').addEventListener('click', e => {
        e.preventDefault()
        fetch(e.target.href).then(req => {
            if (req.ok) {
                e.target.classList.add('font-bold', 'no-underline', 'pointer-events-none')
                document.querySelector('.log-debug').classList.remove('font-bold', 'no-underline', 'pointer-events-none')
            }
        })
    })

    // log click
    document.querySelectorAll('[data-log]').forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault()
            fetch(e.target.href).then(req => {
                if (req.ok) {
                    document.querySelectorAll('[data-log]').forEach(el => {
                        el.classList.remove('font-bold', 'no-underline', 'pointer-events-none');
                    });
                    e.target.classList.add('font-bold', 'no-underline', 'pointer-events-none');
                }
            })
        })
    })

    // sort click
    document.querySelectorAll('[data-sort]').forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault()
            fetch(e.target.href).then(req => {
                if (req.ok) {
                    if (e.target.dataset.sort === 'descending') {
                        window.sort = 'desc';
                        document.querySelector('[data-sort="ascending"]').classList.remove('font-bold', 'no-underline', 'pointer-events-none')
                        document.querySelector('[data-sort="descending"]').classList.add('font-bold', 'no-underline', 'pointer-events-none')
                    } else {
                        window.sort = 'asc';
                        document.querySelector('[data-sort="descending"]').classList.remove('font-bold', 'no-underline', 'pointer-events-none')
                        document.querySelector('[data-sort="ascending"]').classList.add('font-bold', 'no-underline', 'pointer-events-none')
                    }
                }
            })
        })
    })
    // sort click
    document.querySelectorAll('[data-limit]').forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault()
            fetch(e.target.href).then(req => {
                if (req.ok) {
                    document.querySelectorAll('[data-limit]').forEach(el => {
                        el.classList.remove('font-bold', 'no-underline', 'pointer-events-none');
                    });
                    e.target.classList.add('font-bold', 'no-underline', 'pointer-events-none')
                }
            })
        })
    })

    document.querySelectorAll('.action').forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault()
            action = e.target.id;
            subreddit = e.target.dataset.subreddit;
            type = e.target.dataset.type;
            force = e.target.dataset.force === 'true';

            fetch(`action?action=${action}&subreddit=${subreddit}&force=${force}&type=${type}`);
        });
    })

    document.querySelector("#runCheck").addEventListener('click', e => {
        e.preventDefault();
        const urlInput = document.querySelector('#checkUrl');
        const dryRunCheck = document.querySelector('#dryrunCheck');

        const url = urlInput.value;
        const dryRun = dryRunCheck.checked ? 1 : 0;

        fetch(`check?url=${url}&dryRun=${dryRun}`);

        urlInput.value = '';
        dryRunCheck.checked = false;
    });

    document.querySelectorAll('[data-subreddit].tabSelect').forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault();
            document.querySelectorAll('[data-subreddit].tabSelect').forEach(el => {
                el.classList.remove('font-bold', 'no-underline', 'pointer-events-none');
            });
            document.querySelectorAll('[data-subreddit].sub').forEach(el => {
                el.classList.remove('active');
            });
            e.target.classList.add('font-bold', 'no-underline', 'pointer-events-none');
            document.querySelector(`[data-subreddit="${e.target.dataset.subreddit}"].sub`).classList.add('active');
        });
    })
    document.querySelector('[data-subreddit="All"].tabSelect').classList.add('font-bold', 'no-underline', 'pointer-events-none');
    document.querySelector('[data-subreddit="All"].sub').classList.add('active');
</script>

<script src="https://cdn.socket.io/3.1.3/socket.io.min.js"
        integrity="sha384-cPwlPLvBTa3sKAgddT6krw0cJat7egBga3DJepJyrLl4Q9/5WLra3rrnMcyTyOnh"
        crossorigin="anonymous"></script>
<script>
    const SUBREDDIT_NAME_LOG_REGEX = /{(.+?)}/;
    const parseSubredditLogName = (val) => {
        const matches = val.match(SUBREDDIT_NAME_LOG_REGEX);
        if (matches === null) {
            return undefined;
        }
        return matches[1];
    }

    let socket = io({
        reconnectionAttempts: 5, // bail after 5 attempts
    });

    socket.on("connect", () => {
        document.body.classList.add('connected')
        socket.on("log", data => {
            const selectors = ['[data-subreddit="All"].logs'];
            const sub = parseSubredditLogName(data);
            if (sub !== undefined) {
                selectors.push(`[data-subreddit="${sub}"].logs`);
            }
            selectors.forEach(sel => {
                const el = document.querySelector(sel);
                if (el !== null) {
                    const currLogs = el.innerHTML;
                    document.querySelector(sel).innerHTML = window.sort === 'desc' ? data.concat(currLogs) : currLogs.concat(data)
                }
            });
        });
        socket.on("logClear", data => {
            data.forEach((obj) => {
                const n = obj.name === 'all' ? 'All' : obj.name;
                document.querySelector(`[data-subreddit="${n}"].logs`).innerHTML = obj.logs;
            })
            //document.querySelector('.logs').innerHTML = data.join().replaceAll(/<br\s*\/?>\,/g,'<br />');
        });
        socket.on('opStats', (data) => {
            for (const [k, v] of Object.entries(data)) {
                document.querySelector(`#${k}`).innerHTML = v;
            }
        });
    });

    socket.on('disconnect', () => {
        document.body.classList.remove('connected');
    });
</script>
</body>
</html>
