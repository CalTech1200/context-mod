<html>
<%- include('partials/head', {title: undefined}) %>
<body class="">
<script>localStorage.getItem('ms-dark') === 'no' ? document.body.classList.remove('dark') : document.body.classList.add('dark')</script>
<div class="min-w-screen min-h-screen bg-gray-100 bg-gray-100 dark:bg-gray-800 font-sans">
    <%- include('partials/authTitle') %>
    <div class="space-x-4 py-1 md:px-10 leading-6 font-semibold bg-gray-500 dark:bg-gray-700 text-white">
        <div class="container mx-auto">
            <ul id="tabs" class="inline-flex flex-wrap">
                <% subreddits.forEach(function (data){ %>
                    <li class="my-3 px-3 dark:text-white">
                        <span data-subreddit="<%= data.name %>" class="rounded-md py-2 px-3 tabSelectWrapper">
                        <a class="tabSelect font-normal pointer hover:font-bold"
                           data-subreddit="<%= data.name %>">
                            <%= data.name %>
                        </a>
                            <% if ((data.name === 'All' && isOperator) || data.name !== 'All') { %>
                                <span class="inline-block mb-0.5 ml-0.5 w-2 h-2 bg-<%= data.indicator %>-400 rounded-full"></span>
                            <% } %>
                        </span>
                    </li>
                <% }) %>
            </ul>
        </div>
    </div>
    <div class="container mx-auto">
        <div class="grid">
            <div class="bg-white dark:bg-gray-500 dark:text-white">
                <div class="pb-6 pt-3 md:px-7">
                    <!--                    <div class="flex items-center justify-around">-->
                    <!--                        -->

                    <!--                    </div>-->
                    <% subreddits.forEach(function (data){ %>
                        <div class="sub" data-subreddit="<%= data.name %>">
                            <div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-3 gap-5">
                                <div class="bg-white shadow-md rounded my-3 dark:bg-gray-500 dark:text-white">
                                    <div class="space-x-4 px-4 p-2 leading-2 font-semibold bg-gray-300 dark:bg-gray-700 dark:text-white">
                                        <div class="flex items-center justify-between">
                                            <h4>Overview</h4>
                                            <% if (data.name === 'All') { %>
                                                <div class="flex items-center flex-end">
                                                    <div>
                                                        <a class="action" data-action="start" data-type="bot"
                                                           data-subreddit="<%= data.name %>"
                                                           href="#">Start All</a> |
                                                        <a class="action" data-action="stop" data-type="bot"
                                                           data-subreddit="<%= data.name %>"
                                                           href="#">Stop All</a> |
                                                        <a class="action" data-action="reload"
                                                           data-subreddit="<%= data.name %>"
                                                           href="#">Update All</a>
                                                    </div>
                                                </div>
                                            <% } else { %>
                                                <div class="flex items-center flex-end">
                                                    <div>
                                                        <span class="mr-2">Check:</span>
                                                        <a class="action" data-action="check" data-type="unmoderated"
                                                           data-subreddit="<%= data.name %>"
                                                           href="#">Unmoderated</a> |
                                                        <a class="action" data-action="check" data-type="modqueue"
                                                           data-subreddit="<%= data.name %>"
                                                           href="#">Modqueue</a>
                                                    </div>
                                                </div>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="p-4">
                                        <div class="stats">
                                            <% if (data.name !== 'All') { %>
                                                <label>
                                                    <span class="has-tooltip">
                                                                <span class="tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2 space-y-3 p-2 text-left">
                                                                    <div>The "main" process monitoring Activity for the subreddit.</div>
                                                                    <div><b>Starting</b> or <b>Stopping</b> this will also Start/Stop <b>Queue/Events.</b></div>
                                                                    <div>Additionally, the <b>Stopped</b> state will prevent configuration from being checked on heartbeat. This is useful if the subreddit's config is really broken and you want to essentially ignore this subreddit until manually interacted with.</div>
                                                                </span>
                                                                <span>
                                                                    Bot
                                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                                         class="h-4 w-4 inline-block cursor-help"
                                                                         fill="none"
                                                                         viewBox="0 0 24 24" stroke="currentColor">
                                                                        <path stroke-linecap="round"
                                                                              stroke-linejoin="round"
                                                                              stroke-width="2"
                                                                              d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                                                    </svg>
                                                                </span>
                                                        </span>
                                                </label>
                                                <div class="flex items-center justify-between">
                                                    <span class="font-semibold"><%= `${data.botState.state}${data.botState.causedBy === 'system' ? '' : ' (user)'}` %></span>
                                                    <div class="flex items-center flex-end">
                                                        <div>
                                                            <a class="action" data-action="start" data-type="bot"
                                                               data-subreddit="<%= data.name %>" href="#">Start</a> |
                                                            <a class="action" data-action="stop" data-type="bot"
                                                               data-subreddit="<%= data.name %>" href="#">Stop</a>
                                                        </div>
                                                    </div>
                                                </div>
                                                <label>
                                                        <span class="has-tooltip">
                                                                <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2 space-y-3 p-2 text-left'>
                                                                    <div>The <b>Queue</b> controls processing of <b>Activities</b> ingested from <b>Events.</b></div>
                                                                    <ul class="list-inside list-disc">
                                                                        <li><b>Starting</b> the Queue will begin Processing (running checks on) Queued Activities based on the max number of workers available</li>
                                                                        <li><b>Pausing</b> the Queue will prevent any Queued Activities from being Processed (excluding already running Activities)</li>
                                                                        <li><b>Stopping</b> the Queue will <b>clear any existing Queued Activities</b> and prevent any subsequently queued Activities from being Processed</li>
                                                                    </ul>
                                                                    <div>If all available workers are processing Activities then new Activities returned from <b>Events</b> will be <b>Queued</b></div>
                                                                </span>
                                                                <span>
                                                                    Queue
                                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                                         class="h-4 w-4 inline-block cursor-help"
                                                                         fill="none"
                                                                         viewBox="0 0 24 24" stroke="currentColor">
                                                                        <path stroke-linecap="round"
                                                                              stroke-linejoin="round"
                                                                              stroke-width="2"
                                                                              d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                                                    </svg>
                                                                </span>
                                                        </span>
                                                </label>
                                                <div class="flex items-center justify-between">
                                                    <span class="font-semibold"><%= `${data.queueState.state}${data.queueState.causedBy === 'system' ? '' : ' (user)'}` %></span>
                                                    <div class="flex items-center flex-end">
                                                        <div>
                                                            <a class="action" data-action="start" data-type="queue"
                                                               data-subreddit="<%= data.name %>" href="#">Start</a> |
                                                            <a class="action" data-action="pause" data-type="queue"
                                                               data-subreddit="<%= data.name %>" href="#">Pause</a> |
                                                            <a class="action" data-action="stop" data-type="queue"
                                                               data-subreddit="<%= data.name %>" href="#">Stop</a>
                                                        </div>
                                                    </div>
                                                </div>
                                                <label>
                                                    <span class="has-tooltip">
                                                                <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2 space-y-3 p-2 text-left'>
                                                                    <div><b>Events</b> controls polling (monitoring) of <b>Activity Sources</b> (unmoderated, modqueue, comments, etc.)</div>
                                                                    <ul class="list-inside list-disc">
                                                                        <li><b>Starting</b> Events will cause polling to begin. Any new Activities discovered after polling begins will be sent to <b>Queue</b></li>
                                                                        <li><b>Pausing</b> Events will cause polling to stop.</li>
                                                                        <li><b>Stopping</b> Events will cause polling to stop and rebuild polling behavior on next start.</li>
                                                                    </ul>
                                                                </span>
                                                                <span>
                                                                    Events
                                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                                         class="h-4 w-4 inline-block cursor-help"
                                                                         fill="none"
                                                                         viewBox="0 0 24 24" stroke="currentColor">
                                                                        <path stroke-linecap="round"
                                                                              stroke-linejoin="round"
                                                                              stroke-width="2"
                                                                              d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                                                    </svg>
                                                                </span>
                                                        </span>
                                                </label>
                                                <div class="flex items-center justify-between">
                                                    <span class="font-semibold"><%= `${data.eventsState.state}${data.eventsState.causedBy === 'system' ? '' : ' (user)'}` %></span>
                                                    <div class="flex items-center flex-end">
                                                        <div>
                                                            <a class="action" data-action="start" data-type="event"
                                                               data-subreddit="<%= data.name %>" href="#">Start</a> |
                                                            <a class="action" data-action="pause" data-type="event"
                                                               data-subreddit="<%= data.name %>" href="#">Pause</a> |
                                                            <a class="action" data-action="stop" data-type="event"
                                                               data-subreddit="<%= data.name %>" href="#">Stop</a>
                                                        </div>
                                                    </div>
                                                </div>
                                                <label>Slow Mode</label>
                                                <span><%= data.delayBy %></span>
                                            <% } %>
                                            <% if (data.name === 'All') { %>
                                                <label>Uptime</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <%= system.startedAt %>
                                                    </span>
                                                    <span>
                                                        <span id="startedAtHuman"><%= system.startedAtHuman %></span>
                                                    </span>
                                                </span>
                                                <label>Heartbeat Interval</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <%= data.heartbeat %> seconds
                                                    </span>
                                                    <%= data.heartbeatHuman %>
                                                </span>
                                                <label>Next Heartbeat</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <span id="nextHeartbeat"><%= data.nextHeartbeat %></span>
                                                    </span>
                                                    <span id="nextHeartbeatHuman"><%= data.nextHeartbeatHuman %></span>
                                                </span>
                                            <% } %>
                                            <label>
                                                    <span class="has-tooltip">
                                                    <span style="margin-top:35px"
                                                          class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2 space-y-3 p-2 text-left'>
                                                        <div>The total number of <b>Activities</b> (Comment/Submission) currently being processed by the bot or queued to be processed.</div>
                                                        <div>
                                                            Max Concurrent Processing
                                                            <ul class="list-inside list-disc">
                                                                <li>Real Max: <%= data.maxWorkers %></li>
                                                                <% if (data.name !== 'All') { %>
                                                                    <li>Config Max: <%= data.subMaxWorkers %></li>
                                                                <% } %>
                                                                <li>Global Max: <%= data.globalMaxWorkers %></li>
                                                            </ul>
                                                        </div>
                                                    </span>
                                                    <span>Activities <svg xmlns="http://www.w3.org/2000/svg"
                                                                          class="h-4 w-4 inline-block cursor-help"
                                                                          fill="none"
                                                                          viewBox="0 0 24 24" stroke="currentColor">
                                                                        <path stroke-linecap="round"
                                                                              stroke-linejoin="round"
                                                                              stroke-width="2"
                                                                              d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                                                    </svg>
                                                    </span>
                                                </span>
                                            </label>
                                            <span><%= `${data.runningActivities} Processing / ${data.queuedActivities} Queued` %></span>
                                            <% if (data.name === 'All' && isOperator) { %>
                                                <label>Operators</label>
                                                <span><%= operators %></span>
                                            <% } %>
                                        </div>
                                        <% if (data.name !== 'All') { %>
                                            <ul class="list-disc list-inside mt-4">
                                                <% data.pollingInfo.forEach(function (i){ %>
                                                    <li>Polling <%- i %></li>
                                                <% }) %>
                                            </ul>
                                        <% } %>
                                    </div>
                                </div>
                                <% if (data.name === 'All') { %>
                                    <div class="bg-white shadow-md rounded my-3 dark:bg-gray-500 dark:text-white">
                                        <div class="space-x-4 px-4 p-2 leading-2 font-semibold bg-gray-300 dark:bg-gray-700 dark:text-white">
                                            <h4>API</h4>
                                        </div>
                                        <div class="p-4">
                                            <div class="stats">
                                                <label>Soft Limit</label>
                                                <span>< <span id="softLimit"><%= data.softLimit %></span></span>
                                                <label>Hard Limit</label>
                                                <span>< <span id="softLimit"><%= data.hardLimit %></span></span>
                                                <label>Api Nanny</label>
                                                <span><b><span id="nannyMode"><%= data.nannyMode %></span></b></span>
                                                <label>Api Usage</label>
                                                <span><span id="apiLimit"><%= data.apiLimit %></span>/600 (~<span
                                                            id="apiAvg"><%= data.apiAvg %></span>req/s)</span>
                                                <label>Depleted</label>
                                                <span>in ~<span id="apiDepletion"><%= data.apiDepletion %></span></span>
                                                <label>Limit Reset</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <span id="limitReset"><%= data.limitReset %></span>
                                                    </span>
                                                    <span id="limitResetHuman"><%= data.limitResetHuman %></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                <% } %>
                                <% if (data.name !== 'All') { %>
                                    <div class="bg-white shadow-md rounded my-3 dark:bg-gray-500 dark:text-white">
                                        <div class="space-x-4 px-4 p-2 leading-2 font-semibold bg-gray-300 dark:bg-gray-700 dark:text-white">
                                            <h4>Config
                                                <span>
                                                    <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <%= data.wikiRevision %>
                                                    </span>
                                                    (Revised <%= data.wikiRevisionHuman %>)
                                                </span>
                                            </h4>
                                        </div>
                                        <div class="p-4">
                                            <div class="stats">
                                                <label>Valid</label>
                                                <span class="font-semibold"><%= data.validConfig %></span>
                                                <label>Checks</label>
                                                <span><%= data.checks.submissions %> Submission | <%= data.checks.comments %> Comment </span>
                                                <label>Dry Run</label>
                                                <span><%= data.dryRun %></span>
                                                <label>Updated</label>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <%= data.startedAt %>
                                                    </span>
                                                    <%= data.startedAtHuman %>
                                                </span>
                                                </span>
                                                <label>Checked</label>
                                                <span>
                                                <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <%= data.wikiLastCheck %>
                                                    </span>
                                                    <%= data.wikiLastCheckHuman %>
                                                </span>
                                                    <a class="action" data-action="reload"
                                                       data-subreddit="<%= data.name %>"
                                                       href="#">Update</a> | <a
                                                            class="action" data-action="reload" data-force="true"
                                                            data-subreddit="<%= data.name %>" href="#">Force</a>
                                                    </span>
                                                <label>Location</label>
                                                <span>
                                                    <a style="display: inline"
                                                       href="<%= data.wikiHref %>"><%= data.wikiLocation %></a> | <a style="display: inline" target="_blank"
                                                                                                                     href="/config?bot=<%= locals.botId %>&subreddit=<%= data.name %>">View</a>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                <% } %>
                                <div class="bg-white shadow-md rounded my-3 dark:bg-gray-500 dark:text-white">
                                    <div class="space-x-4 px-4 p-2 leading-2 font-semibold bg-gray-300 dark:bg-gray-700 dark:text-white">
                                        <h4>Usage</h4>
                                    </div>
                                    <div class="p-4">
                                        <div class="flex items-top justify-evenly">
                                            <div>
                                                <div class="text-left font-semibold pb-2">Bot</div>
                                                <% if (data.name !== 'All') { %><span class="text-center pb-2"><a
                                                            data-subreddit="<%= data.name %>"
                                                            data-stattype="reloadStats" class="statsToggle" href="">Last Reload</a> | <a
                                                            data-subreddit="<%= data.name %>" data-stattype="allStats"
                                                            class="statsToggle allStatsToggle"
                                                            href="">All Time</a> </span>
                                                <% } %>
                                                <% if (data.name !== 'All') { %>
                                                    <div data-subreddit="<%= data.name %>"
                                                         class="stats botStats reloadStats">
                                                        <label>Events</label>
                                                        <span><%= data.stats.eventsCheckedSinceStartTotal === undefined ? '-' : data.stats.eventsCheckedSinceStartTotal %></span>

                                                        <label>Checks</label>
                                                        <span class="has-tooltip">
                                                        <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                            <span><%= data.stats.checksTriggeredSinceStartTotal %></span> Triggered / <span><%= data.stats.checksRunSinceStartTotal %></span> Run
                                                        </span>
                                                        <span><%= data.stats.checksTriggeredSinceStartTotal %></span> T / <span><%= data.stats.checksRunSinceStartTotal %></span> R
                                                    </span>

                                                        <label>Rules</label>
                                                        <span class="has-tooltip">
                                                    <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                        <span><%= data.stats.rulesTriggeredSinceStartTotal %></span> Triggered / <span><%= data.stats.rulesCachedSinceStartTotal %></span> Cached / <span><%= data.stats.rulesRunSinceStartTotal %></span> Run
                                                    </span>
                                                    <span class="cursor-help">
                                                        <span><%= data.stats.rulesTriggeredSinceStartTotal %></span> T / <span><%= data.stats.rulesCachedSinceStartTotal %></span> C / <span><%= data.stats.rulesRunSinceStartTotal %></span> R</span>
                                                </span>

                                                        <label>Actions</label>
                                                        <span class="cursor-help"><%= data.stats.actionsRunSinceStartTotal === undefined ? '-' : data.stats.actionsRunSinceStartTotal %></span>
                                                    </div>
                                                <% } %>
                                                <div data-subreddit="<%= data.name %>" class="stats botStats allStats">
                                                    <label>Events</label>
                                                    <span><%= data.stats.eventsCheckedTotal %></span>

                                                    <label>Checks</label>
                                                    <span class="has-tooltip">
                                                        <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                            <span><%= data.stats.checksTriggeredTotal %></span> Triggered / <span><%= data.stats.checksRunTotal %></span> Run
                                                        </span>
                                                        <span class="cursor-help"><span><%= data.stats.checksTriggeredTotal %></span> T / <span><%= data.stats.checksRunTotal %></span> R</span>
                                                    </span>

                                                    <label>Rules</label>
                                                    <span class="has-tooltip">
                                                        <span class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2'>
                                                            <span><%= data.stats.rulesTriggeredTotal %></span> Triggered / <span><%= data.stats.rulesCachedTotal %></span> Cached / <span><%= data.stats.rulesRunTotal %></span> Run
                                                        </span>
                                                        <span class="cursor-help"><span><%= data.stats.rulesTriggeredTotal %></span> T / <span><%= data.stats.rulesCachedTotal %></span> C / <span><%= data.stats.rulesRunTotal %></span> R</span>
                                                    </span>

                                                    <label>Actions</label>
                                                    <span><%= data.stats.actionsRunTotal %> Run</span>
                                                </div>
                                            </div>
                                            <div>
                                                <div class="text-left pb-2">
                                                    <% if (data.name === 'All') { %>
                                                        <span class="font-semibold">Cache</span>
                                                    <% } else { %>
                                                        <div>
                                                            <span class="font-semibold capitalize">Cache - <%= data.stats.cache.provider %><%= data.stats.cache.isShared ? ' (Shared)' : '' %></span>
                                                            <span class="has-tooltip">
                                                                <span style="right: 0;"
                                                                      class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2 space-y-3 p-2'>
                                                                    <% if (data.stats.cache.isShared) { %>
                                                                        <div>This subreddit is using the default, <b>application-wide shared cache</b> because its <b
                                                                                    class="font-mono">caching</b> configuration is not specified.</div>
                                                                        <div>Pros:
                                                                        <ul class="list-inside list-disc">
                                                                            <li>All subreddits can utilize any cached authors/etc., reduces overall api usage</li>
                                                                            <li>Bot Operator can fine tune cache without subreddit interaction</li>
                                                                        </ul>
                                                                    </div>
                                                                        <div>
                                                                        Cons:
                                                                        <ul class="list-inside list-disc">
                                                                            <li>Subreddits must use default TTLs which may not fit use case for rules</li>
                                                                            <li>Bots operating subreddits with dramatically contrasting caching requirements may suffer in performance/api usage</li>
                                                                        </ul>
                                                                    </div>
                                                                    <% } else { %>
                                                                        <div>This subreddit is using <b>a private cache instance</b> because its <b
                                                                                    class="font-mono">caching</b> configuration is non-default.</div>
                                                                        <div>Pros:
                                                                        <ul class="list-inside list-disc">
                                                                            <li>Custom configuration (TTLs, max size) may fit subreddit usage of the bot better</li>
                                                                            <li>Using a redis backend may increase performance for very large caches</li>
                                                                        </ul>
                                                                    </div>
                                                                        <div>
                                                                        Cons:
                                                                        <ul class="list-inside list-disc">
                                                                            <li>Using a private <span class="font-mono">memory</span> cache produces a larger memory burden for the operator's host machine since it is not shared</li>
                                                                            <li>Bot Operator cannot fine-tune caching parameters for this subreddit</li>
                                                                        </ul>
                                                                    </div>
                                                                    <% } %>
                                                                </span>
                                                                <span>
                                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                                         class="h-4 w-4 inline-block cursor-help"
                                                                         fill="none"
                                                                         viewBox="0 0 24 24" stroke="currentColor">
                                                                        <path stroke-linecap="round"
                                                                              stroke-linejoin="round"
                                                                              stroke-width="2"
                                                                              d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                                                    </svg>
                                                                </span>
                                                        </span>
                                                        </div>
                                                    <% } %>
                                                </div>
                                                <div class="stats">
                                                    <label>Keys</label>
                                                    <span><%= data.stats.cache.currentKeyCount %></span>
                                                    <label>Calls</label>
                                                    <span><span><%= data.stats.cache.totalRequests %></span> | <%= data.stats.cache.totalMiss %> (<%= data.stats.cache.missPercent %>) miss</span>
                                                    <label>Call Rate</label>
                                                    <span><%= data.stats.cache.requestRate %>/10min</span>
                                                </div>
                                                <div class="text-left py-2">
                                                        <span class="has-tooltip">
                                                            <span style="margin-top:30px; margin-left: -25em"
                                                                  class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2 space-y-3 p-2'>
                                                                <div>Number of cache requests for each type of cacheable item.</div>
                                                                <div class="mb-2"><b>Miss</b> means the cache was empty and data had to be fully acquired/processed.</div>
                                                                <div class="stats three">
                                                                    <label>Author</label>
                                                                    <span><%= data.stats.cache.types.author.requests %> | <%= data.stats.cache.types.author.miss %> (<%= data.stats.cache.types.author.missPercent %>) miss</span>
                                                                    <span>
                                                                        - Results from <span class="font-mono">window</span> criteria.
                                                                    </span>
                                                                    <label>Avgs</label>
                                                                    <span>Hits/Key <%= data.stats.cache.types.author.identifierAverageHit %> | Hit Interval <%= data.stats.cache.types.author.averageTimeBetweenHits %>s</span>
                                                                    <span>
                                                                    </span>
                                                                    <label class="newRow">Author Criteria</label>
                                                                    <span class="newRow"><%= data.stats.cache.types.authorCrit.requests %> | <%= data.stats.cache.types.authorCrit.miss %> (<%= data.stats.cache.types.authorCrit.missPercent %>) miss</span>
                                                                    <span class="newRow">
                                                                        - <span class="font-mono">authorIs</span> results
                                                                    </span>
                                                                    <label>Avgs</label>
                                                                    <span>Hits/Key <%= data.stats.cache.types.authorCrit.identifierAverageHit %> | Hit Interval <%= data.stats.cache.types.authorCrit.averageTimeBetweenHits %>s</span>
                                                                    <span>
                                                                    </span>

                                                                    <label class="newRow">Item Criteria</label>
                                                                    <span class="newRow"><%= data.stats.cache.types.itemCrit.requests %> | <%= data.stats.cache.types.itemCrit.miss %> (<%= data.stats.cache.types.itemCrit.missPercent %>) miss</span>
                                                                    <span class="newRow">
                                                                        - <span class="font-mono">itemIs</span> results
                                                                    </span>
                                                                    <label>Avgs</label>
                                                                    <span>Hits/Key <%= data.stats.cache.types.itemCrit.identifierAverageHit %> | Hit Interval <%= data.stats.cache.types.itemCrit.averageTimeBetweenHits %>s</span>
                                                                    <span>
                                                                    </span>

                                                                    <label class="newRow">Comment Check</label>
                                                                    <span class="newRow"><%= data.stats.cache.types.commentCheck.requests %> | <%= data.stats.cache.types.commentCheck.miss %> (<%= data.stats.cache.types.commentCheck.missPercent %>) miss</span>
                                                                    <span class="newRow">
                                                                        - <span class="font-mono">cacheUserResult</span> results
                                                                    </span>
                                                                    <label>Avgs</label>
                                                                    <span>Hits/Key <%= data.stats.cache.types.commentCheck.identifierAverageHit %> | Hit Interval <%= data.stats.cache.types.commentCheck.averageTimeBetweenHits %>s</span>
                                                                    <span>
                                                                    </span>

                                                                    <label class="newRow">Submissions</label>
                                                                    <span class="newRow"><%= data.stats.cache.types.submission.requests %> | <%= data.stats.cache.types.submission.miss %> (<%= data.stats.cache.types.submission.missPercent %>) miss</span>
                                                                    <span class="newRow"></span>
                                                                    <label>Avgs</label>
                                                                    <span>Hits/Key <%= data.stats.cache.types.submission.identifierAverageHit %> | Hit Interval <%= data.stats.cache.types.submission.averageTimeBetweenHits %>s</span>
                                                                    <span>
                                                                    </span>

                                                                    <label class="newRow">Comments</label>
                                                                    <span class="newRow"><%= data.stats.cache.types.comment.requests %> | <%= data.stats.cache.types.comment.miss %> (<%= data.stats.cache.types.comment.missPercent %>) miss</span>
                                                                    <span class="newRow"></span>
                                                                    <label>Avgs</label>
                                                                    <span>Hits/Key <%= data.stats.cache.types.comment.identifierAverageHit %> | Hit Interval <%= data.stats.cache.types.comment.averageTimeBetweenHits %>s</span>
                                                                    <span>
                                                                    </span>

                                                                    <label class="newRow">Content</label>
                                                                    <span class="newRow"><%= data.stats.cache.types.content.requests %> | <%= data.stats.cache.types.content.miss %> (<%= data.stats.cache.types.content.missPercent %>) miss</span>
                                                                    <span class="newRow">
                                                                        - footer/comment/ban/message content.
                                                                    </span>
                                                                    <label>Avgs</label>
                                                                    <span>Hits/Key <%= data.stats.cache.types.content.identifierAverageHit %> | Hit Interval <%= data.stats.cache.types.content.averageTimeBetweenHits %>s</span>
                                                                    <span>
                                                                    </span>

                                                                    <label class="newRow">UserNote</label>
                                                                    <span class="newRow"><%= data.stats.cache.types.userNotes.requests %> | <%= data.stats.cache.types.userNotes.miss %> (<%= data.stats.cache.types.userNotes.missPercent %>) miss</span>
                                                                    <span class="newRow"></span>
                                                                    <label>Avgs</label>
                                                                    <span>Hits/Key <%= data.stats.cache.types.userNotes.identifierAverageHit %> | Hit Interval <%= data.stats.cache.types.userNotes.averageTimeBetweenHits %>s</span>
                                                                    <span>
                                                                    </span>
                                                                </div>
                                                            </span>
                                                            <span class="font-semibold underline" style="text-decoration-style: dotted">Calls Breakdown</span>
                                                        </span>
                                                    <span class="has-tooltip">
                                                                <span style="margin-top:30px; margin-left:-15em;"
                                                                      class='tooltip rounded shadow-lg p-1 bg-gray-100 text-black -mt-2 space-y-3 p-2'>
                                                                    <div>
                                                                        Some tips/tricks for cache:
                                                                    </div>
                                                                    <ul class="list-inside list-disc space-y-2">
                                                                        <li>Only need to pay attention to caching if a subreddit uses the API/cache heavily IE high-volume comment checks or very large check sets for submissions -- check <b>Calls</b> rate</li>
                                                                        <li>Cache misses are roughly 1 to 1 with making an API call -- IE reducing cache miss by 1 reduces api calls by 1.</li>
                                                                        <li>Re-using <span
                                                                                    class="font-mono">window,authorIs,</span> and <span
                                                                                    class="font-mono">itemIs</span> values in configuration will enable the bot to re-use these results and reduce cache misses</li>
                                                                        <li>A high miss % can indicate that above values are not being re-used, TTLs are not long enough, or most items are are new which means the cache can't be used efficiently.</li>
                                                                        <li>Increasing TTL will reduce cache misses at the expense of a larger cache and stale results</li>
                                                                    </ul>
                                                                </span>
                                                                <span>
                                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                                         class="h-4 w-4 inline-block cursor-help"
                                                                         fill="none"
                                                                         viewBox="0 0 24 24" stroke="currentColor">
                                                                        <path stroke-linecap="round"
                                                                              stroke-linejoin="round"
                                                                              stroke-width="2"
                                                                              d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                                                    </svg>
                                                                </span>
                                                        </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br/>
                            <div class="flex items-center justify-between flex-wrap">
                                <div class="inline-flex items-center">
                                    <input data-subreddit="<%= data.name %>" style="min-width: 420px;"
                                           class="border-gray-50 placeholder-gray-500 rounded mt-2 mb-3 p-2 text-black checkUrl"
                                           placeholder="<%= data.name === 'All' ? 'Run Bot on a permalink from any moderated Subreddit' : `Run Bot on a permalink using this Subreddit's config` %>"/>
                                    <span class="mx-2">
                                        <input type="checkbox" class="dryrunCheck" data-subreddit="<%= data.name %>"
                                               name="dryrunCheck">
                                        <label for="dryrunCheck">Dry Run?</label>
                                    </span>
                                    <a class="runCheck" data-subreddit="<%= data.name %>" href="">Run</a>
                                </div>
                                <div class="flex items-center flex-end space-x-2">
                                <span>
                                    <label for="level-select">Level: </label>
                                    <select class="logSettingSelect rounded capitalize text-black" data-type="level"
                                            id="levels-select">
                                        <%- logSettings.levelSelect %>
                                    </select>
                                </span>
                                    <span>
                                    <label for="sort-select">Sort: </label>
                                    <select class="logSettingSelect rounded capitalize text-black" data-type="sort"
                                            id="sort-select">
                                        <%- logSettings.sortSelect %>
                                    </select>
                                </span>
                                    <span>
                                    <label for="limit-select">Limit: </label>
                                    <select class="logSettingSelect rounded capitalize text-black" data-type="limit"
                                            id="limit-select">
                                        <%- logSettings.limitSelect %>
                                    </select>
                                </span>
                                </div>
                            </div>
                            <svg class="loading" version="1.1" id="L9" xmlns="http://www.w3.org/2000/svg"
                                 xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 viewBox="0 0 100 100" xml:space="preserve">
                                    <path
                                            d="M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50">
                                        <animateTransform
                                                attributeName="transform"
                                                attributeType="XML"
                                                type="rotate"
                                                dur="1s"
                                                from="0 50 50"
                                                to="360 50 50"
                                                repeatCount="indefinite"/>
                                    </path>
                                </svg>
                            <div data-subreddit="<%= data.name %>" class="logs font-mono text-sm">
                                <% data.logs.forEach(function (logEntry){ %>
                                    <%- logEntry %>
                                <% }) %>
                            </div>
                        </div>
                    <% }) %>
                </div>
                <!--<div class="w-full flex-auto flex min-h-0 overflow-auto">
                    <div class="w-full relative flex-auto">
                    </div>
                </div>-->
            </div>
        </div>
    </div>
</div>
<script>
    /*    const appendUser = causedBy => causedBy === 'system' ? '' : ' (user)';
        const initialData =
        const updateOverview = (sub, data) => {

        }*/
    window.sort = 'desc';
    document.querySelectorAll('.theme').forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault();
            if (e.target.id === 'dark') {
                document.body.classList.add('dark');
                localStorage.setItem('ms-dark', 'yes');
            } else {
                document.body.classList.remove('dark');
                localStorage.setItem('ms-dark', 'no');
            }
            document.querySelectorAll('.theme').forEach(el => {
                el.classList.remove('font-bold', 'no-underline', 'pointer-events-none');
            });
            e.target.classList.add('font-bold', 'no-underline', 'pointer-events-none');
        })
    })

    document.querySelector("#themeToggle").checked = localStorage.getItem('ms-dark') !== 'no';
    document.querySelector("#themeToggle").onchange = (e) => {
        if (e.target.checked === true) {
            document.body.classList.add('dark');
            localStorage.setItem('ms-dark', 'yes');
        } else {
            document.body.classList.remove('dark');
            localStorage.setItem('ms-dark', 'no');
        }
    }
    // if (localStorage.getItem('ms-dark') === 'no') {
    //     document.querySelector('#light.theme').classList.add('font-bold', 'no-underline', 'pointer-events-none');
    //     document.body.classList.remove('dark')
    // } else {
    //     document.querySelector('#dark.theme').classList.add('font-bold', 'no-underline', 'pointer-events-none');
    // }

    document.querySelectorAll('.logSettingSelect').forEach(el => {
        el.onchange = (e) => {
            action = e.target.dataset.type;
            value = e.target.value;
            fetch(`/logs/settings/update?${action}=${value}`);
            document.querySelectorAll(`#${e.target.id}.logSettingSelect option`).forEach(el => {
                el.classList.remove('font-bold');
            });
            document.querySelector(`#${e.target.id}.logSettingSelect option[data-value="${e.target.value}"]`).classList.add('font-bold');
        }
    });

    document.querySelectorAll('.action').forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault()
            action = e.target.dataset.action;
            subreddit = e.target.dataset.subreddit;
            type = e.target.dataset.type;
            force = e.target.dataset.force === 'true';

            fetch(`/api/action?bot=<%= botId %>&action=${action}&subreddit=${subreddit}&force=${force}&type=${type}`);
        });
    })

    document.querySelectorAll(".runCheck").forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault();
            const subreddit = e.target.dataset.subreddit;
            const urlInput = document.querySelector(`[data-subreddit="${subreddit}"].checkUrl`);
            const dryRunCheck = document.querySelector(`[data-subreddit="${subreddit}"].dryrunCheck`);


            const url = urlInput.value;
            const dryRun = dryRunCheck.checked ? 1 : 0;

            const fetchUrl = `/api/check?bot=<%= botId %>&url=${url}&dryRun=${dryRun}&subreddit=${subreddit}`;
            fetch(fetchUrl);

            urlInput.value = '';
            dryRunCheck.checked = false;
        });
    });

    document.querySelectorAll('.statsToggle').forEach(el => {
        el.addEventListener('click', e => {
            const subreddit = e.target.dataset.subreddit;
            const statsClass = e.target.dataset.stattype;

            e.preventDefault();
            document.querySelectorAll(`[data-subreddit="${subreddit}"].statsToggle`).forEach(el => {
                el.classList.remove('font-bold', 'no-underline', 'pointer-events-none');
            });
            e.target.classList.add('font-bold', 'no-underline', 'pointer-events-none');

            document.querySelectorAll(`[data-subreddit="${subreddit}"].botStats`).forEach(el => {
                el.classList.add('hidden');
            });

            document.querySelector(`[data-subreddit="${subreddit}"].botStats.${statsClass}`).classList.remove('hidden');
        });
    })

    document.querySelectorAll('[data-subreddit].tabSelect').forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault();
            document.querySelectorAll('[data-subreddit].tabSelect').forEach(el => {
                el.classList.remove('font-bold', 'no-underline', 'pointer-events-none');
            });
            document.querySelectorAll('[data-subreddit].sub').forEach(el => {
                el.classList.remove('active');
            });
            e.target.classList.add('font-bold', 'no-underline', 'pointer-events-none');
            document.querySelector(`[data-subreddit="${e.target.dataset.subreddit}"].sub`).classList.add('active');

            document.querySelectorAll('.tabSelectWrapper').forEach(el => {
                el.classList.remove('border-2');
                el.classList.add('border');
            })

            const wrapper = document.querySelector(`[data-subreddit="${e.target.dataset.subreddit}"].tabSelectWrapper`);
            wrapper.classList.remove('border');
            wrapper.classList.add('border-2');

            if ('URLSearchParams' in window) {
                var searchParams = new URLSearchParams(window.location.search)
                searchParams.set("sub", e.target.dataset.subreddit);
                var newRelativePathQuery = window.location.pathname + '?' + searchParams.toString();
                history.pushState(null, '', newRelativePathQuery);
            }
        });
    })
    document.querySelector('[data-subreddit="<%= show %>"].tabSelect').classList.add('font-bold', 'no-underline', 'pointer-events-none');
    document.querySelectorAll('.tabSelectWrapper').forEach(el => el.classList.add('border'));
    document.querySelector('[data-subreddit="<%= show %>"].sub').classList.add('active')
    const wrapper = document.querySelector(`[data-subreddit="<%= show %>"].tabSelectWrapper`);
    wrapper.classList.remove('border');
    wrapper.classList.add('border-2');

    document.querySelectorAll('.stats.reloadStats').forEach(el => el.classList.add('hidden'));
    document.querySelectorAll('.allStatsToggle').forEach(el => el.classList.add('font-bold', 'no-underline', 'pointer-events-none'));
</script>

<script src="https://cdn.socket.io/3.1.3/socket.io.min.js"
        integrity="sha384-cPwlPLvBTa3sKAgddT6krw0cJat7egBga3DJepJyrLl4Q9/5WLra3rrnMcyTyOnh"
        crossorigin="anonymous"></script>
<script>
    const SUBREDDIT_NAME_LOG_REGEX = /{(.+?)}/;
    const parseSubredditLogName = (val) => {
        const matches = val.match(SUBREDDIT_NAME_LOG_REGEX);
        if (matches === null) {
            return undefined;
        }
        return matches[1];
    }

    let socket = io({
        reconnectionAttempts: 5, // bail after 5 attempts
    });

    const newBufferedLogs = () => new Map([["All", []]])

    let bufferedLogs = newBufferedLogs();
    let lastFlush;
    let bufferTimeout;

    socket.on("connect", () => {
        document.body.classList.add('connected')
        socket.on("log", data => {
            bufferedLogs.set('All', bufferedLogs.get('All').concat(data));
            const sub = parseSubredditLogName(data);
            if (sub !== undefined) {
                bufferedLogs.set(sub, (bufferedLogs.get(sub) || []).concat(data));
            }

            const flushLogs = () => {
                bufferedLogs.forEach((logs, subKey) => {
                    const limit = Number.parseInt(document.querySelector(`[data-subreddit="${subKey}"] [data-type="limit"]`).value);
                    const logContainer = document.querySelector(`[data-subreddit="${subKey}"].logs`);
                    let existingLogs;
                    if(window.sort === 'desc') {
                        logs.forEach((l) => {
                            logContainer.insertAdjacentHTML('afterbegin', l);
                        })
                        existingLogs = Array.from(document.querySelectorAll(`[data-subreddit="${subKey}"].logs .logLine`));
                        logContainer.replaceChildren(...existingLogs.slice(0, limit));
                    } else {
                        logs.forEach((l) => {
                            logContainer.insertAdjacentHTML('beforeend', l);
                            existingLogs = Array.from(document.querySelectorAll(`[data-subreddit="${subKey}"].logs .logLine`));
                            const overLimit = limit - existingLogs.length;
                            logContainer.replaceChildren(...existingLogs.slice(overLimit -1, limit));
                        })
                    }
                });
                lastFlush = Date.now();
                bufferedLogs = newBufferedLogs();
                //console.log('Flushed Logs');
            }

            if(lastFlush !== undefined && bufferTimeout !== undefined && ((Date.now() - lastFlush)/1000) > 3) {
                //console.log('Immediate flush');
                clearTimeout(bufferTimeout);
                bufferTimeout = undefined;
                flushLogs();
            } else {
                //console.log('Using timeout');
                clearTimeout(bufferTimeout);
                bufferTimeout = setTimeout(() => {flushLogs();}, 1000);
            }
        });
        socket.on("logClear", data => {
            data.forEach((obj) => {
                const n = obj.name === 'all' ? 'All' : obj.name;
                document.querySelector(`[data-subreddit="${n}"].logs`).innerHTML = obj.logs;
            })
        });
        socket.on('opStats', (data) => {
            for (const [k, v] of Object.entries(data)) {
                document.querySelector(`#${k}`).innerHTML = v;
            }
        });
    });

    socket.on('disconnect', () => {
        document.body.classList.remove('connected');
    });
</script>
</body>
</html>
